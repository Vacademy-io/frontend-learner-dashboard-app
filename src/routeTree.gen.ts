/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StudyLibraryIndexImport } from './routes/study-library/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as LogoutIndexImport } from './routes/logout/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as InstituteSelectionIndexImport } from './routes/institute-selection/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as StudyLibraryCoursesIndexImport } from './routes/study-library/courses/index'
import { Route as LoginForgotPasswordIndexImport } from './routes/login/forgot-password/index'
import { Route as LoginSessionSelectionPageIndexImport } from './routes/login/SessionSelectionPage/index'
import { Route as DashboardNotificationsIndexImport } from './routes/dashboard/notifications/index'
import { Route as AssessmentReportsIndexImport } from './routes/assessment/reports/index'
import { Route as AssessmentExaminationIndexImport } from './routes/assessment/examination/index'
import { Route as StudyLibraryCoursesLevelsIndexImport } from './routes/study-library/courses/levels/index'
import { Route as AssessmentReportsStudentReportIndexImport } from './routes/assessment/reports/student-report/index'
import { Route as AssessmentExaminationAssessmentIdIndexImport } from './routes/assessment/examination/$assessmentId/index'
import { Route as AssessmentExaminationAssessmentIdAssessmentPreviewImport } from './routes/assessment/examination/$assessmentId/assessmentPreview'
import { Route as AssessmentExaminationAssessmentIdLearnerLiveTestImport } from './routes/assessment/examination/$assessmentId/LearnerLiveTest'
import { Route as StudyLibraryCoursesLevelsSubjectsIndexImport } from './routes/study-library/courses/levels/subjects/index'
import { Route as StudyLibraryCoursesLevelsSubjectsModulesIndexImport } from './routes/study-library/courses/levels/subjects/modules/index'
import { Route as StudyLibraryCoursesLevelsSubjectsModulesChaptersIndexImport } from './routes/study-library/courses/levels/subjects/modules/chapters/index'
import { Route as StudyLibraryCoursesLevelsSubjectsModulesChaptersSlidesIndexImport } from './routes/study-library/courses/levels/subjects/modules/chapters/slides/index'

// Create/Update Routes

const StudyLibraryIndexRoute = StudyLibraryIndexImport.update({
  id: '/study-library/',
  path: '/study-library/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const LogoutIndexRoute = LogoutIndexImport.update({
  id: '/logout/',
  path: '/logout/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const InstituteSelectionIndexRoute = InstituteSelectionIndexImport.update({
  id: '/institute-selection/',
  path: '/institute-selection/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const StudyLibraryCoursesIndexRoute = StudyLibraryCoursesIndexImport.update({
  id: '/study-library/courses/',
  path: '/study-library/courses/',
  getParentRoute: () => rootRoute,
} as any)

const LoginForgotPasswordIndexRoute = LoginForgotPasswordIndexImport.update({
  id: '/login/forgot-password/',
  path: '/login/forgot-password/',
  getParentRoute: () => rootRoute,
} as any)

const LoginSessionSelectionPageIndexRoute =
  LoginSessionSelectionPageIndexImport.update({
    id: '/login/SessionSelectionPage/',
    path: '/login/SessionSelectionPage/',
    getParentRoute: () => rootRoute,
  } as any)

const DashboardNotificationsIndexRoute =
  DashboardNotificationsIndexImport.update({
    id: '/dashboard/notifications/',
    path: '/dashboard/notifications/',
    getParentRoute: () => rootRoute,
  } as any)

const AssessmentReportsIndexRoute = AssessmentReportsIndexImport.update({
  id: '/assessment/reports/',
  path: '/assessment/reports/',
  getParentRoute: () => rootRoute,
} as any)

const AssessmentExaminationIndexRoute = AssessmentExaminationIndexImport.update(
  {
    id: '/assessment/examination/',
    path: '/assessment/examination/',
    getParentRoute: () => rootRoute,
  } as any,
)

const StudyLibraryCoursesLevelsIndexRoute =
  StudyLibraryCoursesLevelsIndexImport.update({
    id: '/study-library/courses/levels/',
    path: '/study-library/courses/levels/',
    getParentRoute: () => rootRoute,
  } as any)

const AssessmentReportsStudentReportIndexRoute =
  AssessmentReportsStudentReportIndexImport.update({
    id: '/assessment/reports/student-report/',
    path: '/assessment/reports/student-report/',
    getParentRoute: () => rootRoute,
  } as any)

const AssessmentExaminationAssessmentIdIndexRoute =
  AssessmentExaminationAssessmentIdIndexImport.update({
    id: '/assessment/examination/$assessmentId/',
    path: '/assessment/examination/$assessmentId/',
    getParentRoute: () => rootRoute,
  } as any)

const AssessmentExaminationAssessmentIdAssessmentPreviewRoute =
  AssessmentExaminationAssessmentIdAssessmentPreviewImport.update({
    id: '/assessment/examination/$assessmentId/assessmentPreview',
    path: '/assessment/examination/$assessmentId/assessmentPreview',
    getParentRoute: () => rootRoute,
  } as any)

const AssessmentExaminationAssessmentIdLearnerLiveTestRoute =
  AssessmentExaminationAssessmentIdLearnerLiveTestImport.update({
    id: '/assessment/examination/$assessmentId/LearnerLiveTest',
    path: '/assessment/examination/$assessmentId/LearnerLiveTest',
    getParentRoute: () => rootRoute,
  } as any)

const StudyLibraryCoursesLevelsSubjectsIndexRoute =
  StudyLibraryCoursesLevelsSubjectsIndexImport.update({
    id: '/study-library/courses/levels/subjects/',
    path: '/study-library/courses/levels/subjects/',
    getParentRoute: () => rootRoute,
  } as any)

const StudyLibraryCoursesLevelsSubjectsModulesIndexRoute =
  StudyLibraryCoursesLevelsSubjectsModulesIndexImport.update({
    id: '/study-library/courses/levels/subjects/modules/',
    path: '/study-library/courses/levels/subjects/modules/',
    getParentRoute: () => rootRoute,
  } as any)

const StudyLibraryCoursesLevelsSubjectsModulesChaptersIndexRoute =
  StudyLibraryCoursesLevelsSubjectsModulesChaptersIndexImport.update({
    id: '/study-library/courses/levels/subjects/modules/chapters/',
    path: '/study-library/courses/levels/subjects/modules/chapters/',
    getParentRoute: () => rootRoute,
  } as any)

const StudyLibraryCoursesLevelsSubjectsModulesChaptersSlidesIndexRoute =
  StudyLibraryCoursesLevelsSubjectsModulesChaptersSlidesIndexImport.update({
    id: '/study-library/courses/levels/subjects/modules/chapters/slides/',
    path: '/study-library/courses/levels/subjects/modules/chapters/slides/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/institute-selection/': {
      id: '/institute-selection/'
      path: '/institute-selection'
      fullPath: '/institute-selection'
      preLoaderRoute: typeof InstituteSelectionIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/logout/': {
      id: '/logout/'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/study-library/': {
      id: '/study-library/'
      path: '/study-library'
      fullPath: '/study-library'
      preLoaderRoute: typeof StudyLibraryIndexImport
      parentRoute: typeof rootRoute
    }
    '/assessment/examination/': {
      id: '/assessment/examination/'
      path: '/assessment/examination'
      fullPath: '/assessment/examination'
      preLoaderRoute: typeof AssessmentExaminationIndexImport
      parentRoute: typeof rootRoute
    }
    '/assessment/reports/': {
      id: '/assessment/reports/'
      path: '/assessment/reports'
      fullPath: '/assessment/reports'
      preLoaderRoute: typeof AssessmentReportsIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/notifications/': {
      id: '/dashboard/notifications/'
      path: '/dashboard/notifications'
      fullPath: '/dashboard/notifications'
      preLoaderRoute: typeof DashboardNotificationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/SessionSelectionPage/': {
      id: '/login/SessionSelectionPage/'
      path: '/login/SessionSelectionPage'
      fullPath: '/login/SessionSelectionPage'
      preLoaderRoute: typeof LoginSessionSelectionPageIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/forgot-password/': {
      id: '/login/forgot-password/'
      path: '/login/forgot-password'
      fullPath: '/login/forgot-password'
      preLoaderRoute: typeof LoginForgotPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/study-library/courses/': {
      id: '/study-library/courses/'
      path: '/study-library/courses'
      fullPath: '/study-library/courses'
      preLoaderRoute: typeof StudyLibraryCoursesIndexImport
      parentRoute: typeof rootRoute
    }
    '/assessment/examination/$assessmentId/LearnerLiveTest': {
      id: '/assessment/examination/$assessmentId/LearnerLiveTest'
      path: '/assessment/examination/$assessmentId/LearnerLiveTest'
      fullPath: '/assessment/examination/$assessmentId/LearnerLiveTest'
      preLoaderRoute: typeof AssessmentExaminationAssessmentIdLearnerLiveTestImport
      parentRoute: typeof rootRoute
    }
    '/assessment/examination/$assessmentId/assessmentPreview': {
      id: '/assessment/examination/$assessmentId/assessmentPreview'
      path: '/assessment/examination/$assessmentId/assessmentPreview'
      fullPath: '/assessment/examination/$assessmentId/assessmentPreview'
      preLoaderRoute: typeof AssessmentExaminationAssessmentIdAssessmentPreviewImport
      parentRoute: typeof rootRoute
    }
    '/assessment/examination/$assessmentId/': {
      id: '/assessment/examination/$assessmentId/'
      path: '/assessment/examination/$assessmentId'
      fullPath: '/assessment/examination/$assessmentId'
      preLoaderRoute: typeof AssessmentExaminationAssessmentIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/assessment/reports/student-report/': {
      id: '/assessment/reports/student-report/'
      path: '/assessment/reports/student-report'
      fullPath: '/assessment/reports/student-report'
      preLoaderRoute: typeof AssessmentReportsStudentReportIndexImport
      parentRoute: typeof rootRoute
    }
    '/study-library/courses/levels/': {
      id: '/study-library/courses/levels/'
      path: '/study-library/courses/levels'
      fullPath: '/study-library/courses/levels'
      preLoaderRoute: typeof StudyLibraryCoursesLevelsIndexImport
      parentRoute: typeof rootRoute
    }
    '/study-library/courses/levels/subjects/': {
      id: '/study-library/courses/levels/subjects/'
      path: '/study-library/courses/levels/subjects'
      fullPath: '/study-library/courses/levels/subjects'
      preLoaderRoute: typeof StudyLibraryCoursesLevelsSubjectsIndexImport
      parentRoute: typeof rootRoute
    }
    '/study-library/courses/levels/subjects/modules/': {
      id: '/study-library/courses/levels/subjects/modules/'
      path: '/study-library/courses/levels/subjects/modules'
      fullPath: '/study-library/courses/levels/subjects/modules'
      preLoaderRoute: typeof StudyLibraryCoursesLevelsSubjectsModulesIndexImport
      parentRoute: typeof rootRoute
    }
    '/study-library/courses/levels/subjects/modules/chapters/': {
      id: '/study-library/courses/levels/subjects/modules/chapters/'
      path: '/study-library/courses/levels/subjects/modules/chapters'
      fullPath: '/study-library/courses/levels/subjects/modules/chapters'
      preLoaderRoute: typeof StudyLibraryCoursesLevelsSubjectsModulesChaptersIndexImport
      parentRoute: typeof rootRoute
    }
    '/study-library/courses/levels/subjects/modules/chapters/slides/': {
      id: '/study-library/courses/levels/subjects/modules/chapters/slides/'
      path: '/study-library/courses/levels/subjects/modules/chapters/slides'
      fullPath: '/study-library/courses/levels/subjects/modules/chapters/slides'
      preLoaderRoute: typeof StudyLibraryCoursesLevelsSubjectsModulesChaptersSlidesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/dashboard': typeof DashboardIndexRoute
  '/institute-selection': typeof InstituteSelectionIndexRoute
  '/login': typeof LoginIndexRoute
  '/logout': typeof LogoutIndexRoute
  '/register': typeof RegisterIndexRoute
  '/study-library': typeof StudyLibraryIndexRoute
  '/assessment/examination': typeof AssessmentExaminationIndexRoute
  '/assessment/reports': typeof AssessmentReportsIndexRoute
  '/dashboard/notifications': typeof DashboardNotificationsIndexRoute
  '/login/SessionSelectionPage': typeof LoginSessionSelectionPageIndexRoute
  '/login/forgot-password': typeof LoginForgotPasswordIndexRoute
  '/study-library/courses': typeof StudyLibraryCoursesIndexRoute
  '/assessment/examination/$assessmentId/LearnerLiveTest': typeof AssessmentExaminationAssessmentIdLearnerLiveTestRoute
  '/assessment/examination/$assessmentId/assessmentPreview': typeof AssessmentExaminationAssessmentIdAssessmentPreviewRoute
  '/assessment/examination/$assessmentId': typeof AssessmentExaminationAssessmentIdIndexRoute
  '/assessment/reports/student-report': typeof AssessmentReportsStudentReportIndexRoute
  '/study-library/courses/levels': typeof StudyLibraryCoursesLevelsIndexRoute
  '/study-library/courses/levels/subjects': typeof StudyLibraryCoursesLevelsSubjectsIndexRoute
  '/study-library/courses/levels/subjects/modules': typeof StudyLibraryCoursesLevelsSubjectsModulesIndexRoute
  '/study-library/courses/levels/subjects/modules/chapters': typeof StudyLibraryCoursesLevelsSubjectsModulesChaptersIndexRoute
  '/study-library/courses/levels/subjects/modules/chapters/slides': typeof StudyLibraryCoursesLevelsSubjectsModulesChaptersSlidesIndexRoute
}

export interface FileRoutesByTo {
  '/dashboard': typeof DashboardIndexRoute
  '/institute-selection': typeof InstituteSelectionIndexRoute
  '/login': typeof LoginIndexRoute
  '/logout': typeof LogoutIndexRoute
  '/register': typeof RegisterIndexRoute
  '/study-library': typeof StudyLibraryIndexRoute
  '/assessment/examination': typeof AssessmentExaminationIndexRoute
  '/assessment/reports': typeof AssessmentReportsIndexRoute
  '/dashboard/notifications': typeof DashboardNotificationsIndexRoute
  '/login/SessionSelectionPage': typeof LoginSessionSelectionPageIndexRoute
  '/login/forgot-password': typeof LoginForgotPasswordIndexRoute
  '/study-library/courses': typeof StudyLibraryCoursesIndexRoute
  '/assessment/examination/$assessmentId/LearnerLiveTest': typeof AssessmentExaminationAssessmentIdLearnerLiveTestRoute
  '/assessment/examination/$assessmentId/assessmentPreview': typeof AssessmentExaminationAssessmentIdAssessmentPreviewRoute
  '/assessment/examination/$assessmentId': typeof AssessmentExaminationAssessmentIdIndexRoute
  '/assessment/reports/student-report': typeof AssessmentReportsStudentReportIndexRoute
  '/study-library/courses/levels': typeof StudyLibraryCoursesLevelsIndexRoute
  '/study-library/courses/levels/subjects': typeof StudyLibraryCoursesLevelsSubjectsIndexRoute
  '/study-library/courses/levels/subjects/modules': typeof StudyLibraryCoursesLevelsSubjectsModulesIndexRoute
  '/study-library/courses/levels/subjects/modules/chapters': typeof StudyLibraryCoursesLevelsSubjectsModulesChaptersIndexRoute
  '/study-library/courses/levels/subjects/modules/chapters/slides': typeof StudyLibraryCoursesLevelsSubjectsModulesChaptersSlidesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/institute-selection/': typeof InstituteSelectionIndexRoute
  '/login/': typeof LoginIndexRoute
  '/logout/': typeof LogoutIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/study-library/': typeof StudyLibraryIndexRoute
  '/assessment/examination/': typeof AssessmentExaminationIndexRoute
  '/assessment/reports/': typeof AssessmentReportsIndexRoute
  '/dashboard/notifications/': typeof DashboardNotificationsIndexRoute
  '/login/SessionSelectionPage/': typeof LoginSessionSelectionPageIndexRoute
  '/login/forgot-password/': typeof LoginForgotPasswordIndexRoute
  '/study-library/courses/': typeof StudyLibraryCoursesIndexRoute
  '/assessment/examination/$assessmentId/LearnerLiveTest': typeof AssessmentExaminationAssessmentIdLearnerLiveTestRoute
  '/assessment/examination/$assessmentId/assessmentPreview': typeof AssessmentExaminationAssessmentIdAssessmentPreviewRoute
  '/assessment/examination/$assessmentId/': typeof AssessmentExaminationAssessmentIdIndexRoute
  '/assessment/reports/student-report/': typeof AssessmentReportsStudentReportIndexRoute
  '/study-library/courses/levels/': typeof StudyLibraryCoursesLevelsIndexRoute
  '/study-library/courses/levels/subjects/': typeof StudyLibraryCoursesLevelsSubjectsIndexRoute
  '/study-library/courses/levels/subjects/modules/': typeof StudyLibraryCoursesLevelsSubjectsModulesIndexRoute
  '/study-library/courses/levels/subjects/modules/chapters/': typeof StudyLibraryCoursesLevelsSubjectsModulesChaptersIndexRoute
  '/study-library/courses/levels/subjects/modules/chapters/slides/': typeof StudyLibraryCoursesLevelsSubjectsModulesChaptersSlidesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/institute-selection'
    | '/login'
    | '/logout'
    | '/register'
    | '/study-library'
    | '/assessment/examination'
    | '/assessment/reports'
    | '/dashboard/notifications'
    | '/login/SessionSelectionPage'
    | '/login/forgot-password'
    | '/study-library/courses'
    | '/assessment/examination/$assessmentId/LearnerLiveTest'
    | '/assessment/examination/$assessmentId/assessmentPreview'
    | '/assessment/examination/$assessmentId'
    | '/assessment/reports/student-report'
    | '/study-library/courses/levels'
    | '/study-library/courses/levels/subjects'
    | '/study-library/courses/levels/subjects/modules'
    | '/study-library/courses/levels/subjects/modules/chapters'
    | '/study-library/courses/levels/subjects/modules/chapters/slides'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/dashboard'
    | '/institute-selection'
    | '/login'
    | '/logout'
    | '/register'
    | '/study-library'
    | '/assessment/examination'
    | '/assessment/reports'
    | '/dashboard/notifications'
    | '/login/SessionSelectionPage'
    | '/login/forgot-password'
    | '/study-library/courses'
    | '/assessment/examination/$assessmentId/LearnerLiveTest'
    | '/assessment/examination/$assessmentId/assessmentPreview'
    | '/assessment/examination/$assessmentId'
    | '/assessment/reports/student-report'
    | '/study-library/courses/levels'
    | '/study-library/courses/levels/subjects'
    | '/study-library/courses/levels/subjects/modules'
    | '/study-library/courses/levels/subjects/modules/chapters'
    | '/study-library/courses/levels/subjects/modules/chapters/slides'
  id:
    | '__root__'
    | '/dashboard/'
    | '/institute-selection/'
    | '/login/'
    | '/logout/'
    | '/register/'
    | '/study-library/'
    | '/assessment/examination/'
    | '/assessment/reports/'
    | '/dashboard/notifications/'
    | '/login/SessionSelectionPage/'
    | '/login/forgot-password/'
    | '/study-library/courses/'
    | '/assessment/examination/$assessmentId/LearnerLiveTest'
    | '/assessment/examination/$assessmentId/assessmentPreview'
    | '/assessment/examination/$assessmentId/'
    | '/assessment/reports/student-report/'
    | '/study-library/courses/levels/'
    | '/study-library/courses/levels/subjects/'
    | '/study-library/courses/levels/subjects/modules/'
    | '/study-library/courses/levels/subjects/modules/chapters/'
    | '/study-library/courses/levels/subjects/modules/chapters/slides/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  InstituteSelectionIndexRoute: typeof InstituteSelectionIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  LogoutIndexRoute: typeof LogoutIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
  StudyLibraryIndexRoute: typeof StudyLibraryIndexRoute
  AssessmentExaminationIndexRoute: typeof AssessmentExaminationIndexRoute
  AssessmentReportsIndexRoute: typeof AssessmentReportsIndexRoute
  DashboardNotificationsIndexRoute: typeof DashboardNotificationsIndexRoute
  LoginSessionSelectionPageIndexRoute: typeof LoginSessionSelectionPageIndexRoute
  LoginForgotPasswordIndexRoute: typeof LoginForgotPasswordIndexRoute
  StudyLibraryCoursesIndexRoute: typeof StudyLibraryCoursesIndexRoute
  AssessmentExaminationAssessmentIdLearnerLiveTestRoute: typeof AssessmentExaminationAssessmentIdLearnerLiveTestRoute
  AssessmentExaminationAssessmentIdAssessmentPreviewRoute: typeof AssessmentExaminationAssessmentIdAssessmentPreviewRoute
  AssessmentExaminationAssessmentIdIndexRoute: typeof AssessmentExaminationAssessmentIdIndexRoute
  AssessmentReportsStudentReportIndexRoute: typeof AssessmentReportsStudentReportIndexRoute
  StudyLibraryCoursesLevelsIndexRoute: typeof StudyLibraryCoursesLevelsIndexRoute
  StudyLibraryCoursesLevelsSubjectsIndexRoute: typeof StudyLibraryCoursesLevelsSubjectsIndexRoute
  StudyLibraryCoursesLevelsSubjectsModulesIndexRoute: typeof StudyLibraryCoursesLevelsSubjectsModulesIndexRoute
  StudyLibraryCoursesLevelsSubjectsModulesChaptersIndexRoute: typeof StudyLibraryCoursesLevelsSubjectsModulesChaptersIndexRoute
  StudyLibraryCoursesLevelsSubjectsModulesChaptersSlidesIndexRoute: typeof StudyLibraryCoursesLevelsSubjectsModulesChaptersSlidesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  InstituteSelectionIndexRoute: InstituteSelectionIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  LogoutIndexRoute: LogoutIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
  StudyLibraryIndexRoute: StudyLibraryIndexRoute,
  AssessmentExaminationIndexRoute: AssessmentExaminationIndexRoute,
  AssessmentReportsIndexRoute: AssessmentReportsIndexRoute,
  DashboardNotificationsIndexRoute: DashboardNotificationsIndexRoute,
  LoginSessionSelectionPageIndexRoute: LoginSessionSelectionPageIndexRoute,
  LoginForgotPasswordIndexRoute: LoginForgotPasswordIndexRoute,
  StudyLibraryCoursesIndexRoute: StudyLibraryCoursesIndexRoute,
  AssessmentExaminationAssessmentIdLearnerLiveTestRoute:
    AssessmentExaminationAssessmentIdLearnerLiveTestRoute,
  AssessmentExaminationAssessmentIdAssessmentPreviewRoute:
    AssessmentExaminationAssessmentIdAssessmentPreviewRoute,
  AssessmentExaminationAssessmentIdIndexRoute:
    AssessmentExaminationAssessmentIdIndexRoute,
  AssessmentReportsStudentReportIndexRoute:
    AssessmentReportsStudentReportIndexRoute,
  StudyLibraryCoursesLevelsIndexRoute: StudyLibraryCoursesLevelsIndexRoute,
  StudyLibraryCoursesLevelsSubjectsIndexRoute:
    StudyLibraryCoursesLevelsSubjectsIndexRoute,
  StudyLibraryCoursesLevelsSubjectsModulesIndexRoute:
    StudyLibraryCoursesLevelsSubjectsModulesIndexRoute,
  StudyLibraryCoursesLevelsSubjectsModulesChaptersIndexRoute:
    StudyLibraryCoursesLevelsSubjectsModulesChaptersIndexRoute,
  StudyLibraryCoursesLevelsSubjectsModulesChaptersSlidesIndexRoute:
    StudyLibraryCoursesLevelsSubjectsModulesChaptersSlidesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/dashboard/",
        "/institute-selection/",
        "/login/",
        "/logout/",
        "/register/",
        "/study-library/",
        "/assessment/examination/",
        "/assessment/reports/",
        "/dashboard/notifications/",
        "/login/SessionSelectionPage/",
        "/login/forgot-password/",
        "/study-library/courses/",
        "/assessment/examination/$assessmentId/LearnerLiveTest",
        "/assessment/examination/$assessmentId/assessmentPreview",
        "/assessment/examination/$assessmentId/",
        "/assessment/reports/student-report/",
        "/study-library/courses/levels/",
        "/study-library/courses/levels/subjects/",
        "/study-library/courses/levels/subjects/modules/",
        "/study-library/courses/levels/subjects/modules/chapters/",
        "/study-library/courses/levels/subjects/modules/chapters/slides/"
      ]
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/institute-selection/": {
      "filePath": "institute-selection/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/logout/": {
      "filePath": "logout/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    },
    "/study-library/": {
      "filePath": "study-library/index.tsx"
    },
    "/assessment/examination/": {
      "filePath": "assessment/examination/index.tsx"
    },
    "/assessment/reports/": {
      "filePath": "assessment/reports/index.tsx"
    },
    "/dashboard/notifications/": {
      "filePath": "dashboard/notifications/index.tsx"
    },
    "/login/SessionSelectionPage/": {
      "filePath": "login/SessionSelectionPage/index.tsx"
    },
    "/login/forgot-password/": {
      "filePath": "login/forgot-password/index.tsx"
    },
    "/study-library/courses/": {
      "filePath": "study-library/courses/index.tsx"
    },
    "/assessment/examination/$assessmentId/LearnerLiveTest": {
      "filePath": "assessment/examination/$assessmentId/LearnerLiveTest.tsx"
    },
    "/assessment/examination/$assessmentId/assessmentPreview": {
      "filePath": "assessment/examination/$assessmentId/assessmentPreview.tsx"
    },
    "/assessment/examination/$assessmentId/": {
      "filePath": "assessment/examination/$assessmentId/index.tsx"
    },
    "/assessment/reports/student-report/": {
      "filePath": "assessment/reports/student-report/index.tsx"
    },
    "/study-library/courses/levels/": {
      "filePath": "study-library/courses/levels/index.tsx"
    },
    "/study-library/courses/levels/subjects/": {
      "filePath": "study-library/courses/levels/subjects/index.tsx"
    },
    "/study-library/courses/levels/subjects/modules/": {
      "filePath": "study-library/courses/levels/subjects/modules/index.tsx"
    },
    "/study-library/courses/levels/subjects/modules/chapters/": {
      "filePath": "study-library/courses/levels/subjects/modules/chapters/index.tsx"
    },
    "/study-library/courses/levels/subjects/modules/chapters/slides/": {
      "filePath": "study-library/courses/levels/subjects/modules/chapters/slides/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
