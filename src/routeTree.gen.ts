/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StudyLibraryIndexImport } from './routes/study-library/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as StudyLibrarySubjectsIndexImport } from './routes/study-library/subjects/index'
import { Route as LoginForgotPasswordIndexImport } from './routes/login/forgot-password/index'
import { Route as AssessmentExaminationIndexImport } from './routes/assessment/examination/index'
import { Route as StudyLibrarySubjectsSubjectIndexImport } from './routes/study-library/subjects/$subject/index'
import { Route as AssessmentExaminationAssessmentIdIndexImport } from './routes/assessment/examination/$assessmentId/index'
import { Route as AssessmentExaminationAssessmentIdAssessmentPreviewImport } from './routes/assessment/examination/$assessmentId/assessmentPreview'
import { Route as AssessmentExaminationAssessmentIdLearnerLiveTestImport } from './routes/assessment/examination/$assessmentId/LearnerLiveTest'
import { Route as StudyLibrarySubjectsSubjectModuleIndexImport } from './routes/study-library/subjects/$subject/$module/index'

// Create/Update Routes

const StudyLibraryIndexRoute = StudyLibraryIndexImport.update({
  id: '/study-library/',
  path: '/study-library/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const StudyLibrarySubjectsIndexRoute = StudyLibrarySubjectsIndexImport.update({
  id: '/study-library/subjects/',
  path: '/study-library/subjects/',
  getParentRoute: () => rootRoute,
} as any)

const LoginForgotPasswordIndexRoute = LoginForgotPasswordIndexImport.update({
  id: '/login/forgot-password/',
  path: '/login/forgot-password/',
  getParentRoute: () => rootRoute,
} as any)

const AssessmentExaminationIndexRoute = AssessmentExaminationIndexImport.update(
  {
    id: '/assessment/examination/',
    path: '/assessment/examination/',
    getParentRoute: () => rootRoute,
  } as any,
)

const StudyLibrarySubjectsSubjectIndexRoute =
  StudyLibrarySubjectsSubjectIndexImport.update({
    id: '/study-library/subjects/$subject/',
    path: '/study-library/subjects/$subject/',
    getParentRoute: () => rootRoute,
  } as any)

const AssessmentExaminationAssessmentIdIndexRoute =
  AssessmentExaminationAssessmentIdIndexImport.update({
    id: '/assessment/examination/$assessmentId/',
    path: '/assessment/examination/$assessmentId/',
    getParentRoute: () => rootRoute,
  } as any)

const AssessmentExaminationAssessmentIdAssessmentPreviewRoute =
  AssessmentExaminationAssessmentIdAssessmentPreviewImport.update({
    id: '/assessment/examination/$assessmentId/assessmentPreview',
    path: '/assessment/examination/$assessmentId/assessmentPreview',
    getParentRoute: () => rootRoute,
  } as any)

const AssessmentExaminationAssessmentIdLearnerLiveTestRoute =
  AssessmentExaminationAssessmentIdLearnerLiveTestImport.update({
    id: '/assessment/examination/$assessmentId/LearnerLiveTest',
    path: '/assessment/examination/$assessmentId/LearnerLiveTest',
    getParentRoute: () => rootRoute,
  } as any)

const StudyLibrarySubjectsSubjectModuleIndexRoute =
  StudyLibrarySubjectsSubjectModuleIndexImport.update({
    id: '/study-library/subjects/$subject/$module/',
    path: '/study-library/subjects/$subject/$module/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/study-library/': {
      id: '/study-library/'
      path: '/study-library'
      fullPath: '/study-library'
      preLoaderRoute: typeof StudyLibraryIndexImport
      parentRoute: typeof rootRoute
    }
    '/assessment/examination/': {
      id: '/assessment/examination/'
      path: '/assessment/examination'
      fullPath: '/assessment/examination'
      preLoaderRoute: typeof AssessmentExaminationIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/forgot-password/': {
      id: '/login/forgot-password/'
      path: '/login/forgot-password'
      fullPath: '/login/forgot-password'
      preLoaderRoute: typeof LoginForgotPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/study-library/subjects/': {
      id: '/study-library/subjects/'
      path: '/study-library/subjects'
      fullPath: '/study-library/subjects'
      preLoaderRoute: typeof StudyLibrarySubjectsIndexImport
      parentRoute: typeof rootRoute
    }
    '/assessment/examination/$assessmentId/LearnerLiveTest': {
      id: '/assessment/examination/$assessmentId/LearnerLiveTest'
      path: '/assessment/examination/$assessmentId/LearnerLiveTest'
      fullPath: '/assessment/examination/$assessmentId/LearnerLiveTest'
      preLoaderRoute: typeof AssessmentExaminationAssessmentIdLearnerLiveTestImport
      parentRoute: typeof rootRoute
    }
    '/assessment/examination/$assessmentId/assessmentPreview': {
      id: '/assessment/examination/$assessmentId/assessmentPreview'
      path: '/assessment/examination/$assessmentId/assessmentPreview'
      fullPath: '/assessment/examination/$assessmentId/assessmentPreview'
      preLoaderRoute: typeof AssessmentExaminationAssessmentIdAssessmentPreviewImport
      parentRoute: typeof rootRoute
    }
    '/assessment/examination/$assessmentId/': {
      id: '/assessment/examination/$assessmentId/'
      path: '/assessment/examination/$assessmentId'
      fullPath: '/assessment/examination/$assessmentId'
      preLoaderRoute: typeof AssessmentExaminationAssessmentIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/study-library/subjects/$subject/': {
      id: '/study-library/subjects/$subject/'
      path: '/study-library/subjects/$subject'
      fullPath: '/study-library/subjects/$subject'
      preLoaderRoute: typeof StudyLibrarySubjectsSubjectIndexImport
      parentRoute: typeof rootRoute
    }
    '/study-library/subjects/$subject/$module/': {
      id: '/study-library/subjects/$subject/$module/'
      path: '/study-library/subjects/$subject/$module'
      fullPath: '/study-library/subjects/$subject/$module'
      preLoaderRoute: typeof StudyLibrarySubjectsSubjectModuleIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/dashboard': typeof DashboardIndexRoute
  '/login': typeof LoginIndexRoute
  '/study-library': typeof StudyLibraryIndexRoute
  '/assessment/examination': typeof AssessmentExaminationIndexRoute
  '/login/forgot-password': typeof LoginForgotPasswordIndexRoute
  '/study-library/subjects': typeof StudyLibrarySubjectsIndexRoute
  '/assessment/examination/$assessmentId/LearnerLiveTest': typeof AssessmentExaminationAssessmentIdLearnerLiveTestRoute
  '/assessment/examination/$assessmentId/assessmentPreview': typeof AssessmentExaminationAssessmentIdAssessmentPreviewRoute
  '/assessment/examination/$assessmentId': typeof AssessmentExaminationAssessmentIdIndexRoute
  '/study-library/subjects/$subject': typeof StudyLibrarySubjectsSubjectIndexRoute
  '/study-library/subjects/$subject/$module': typeof StudyLibrarySubjectsSubjectModuleIndexRoute
}

export interface FileRoutesByTo {
  '/dashboard': typeof DashboardIndexRoute
  '/login': typeof LoginIndexRoute
  '/study-library': typeof StudyLibraryIndexRoute
  '/assessment/examination': typeof AssessmentExaminationIndexRoute
  '/login/forgot-password': typeof LoginForgotPasswordIndexRoute
  '/study-library/subjects': typeof StudyLibrarySubjectsIndexRoute
  '/assessment/examination/$assessmentId/LearnerLiveTest': typeof AssessmentExaminationAssessmentIdLearnerLiveTestRoute
  '/assessment/examination/$assessmentId/assessmentPreview': typeof AssessmentExaminationAssessmentIdAssessmentPreviewRoute
  '/assessment/examination/$assessmentId': typeof AssessmentExaminationAssessmentIdIndexRoute
  '/study-library/subjects/$subject': typeof StudyLibrarySubjectsSubjectIndexRoute
  '/study-library/subjects/$subject/$module': typeof StudyLibrarySubjectsSubjectModuleIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/login/': typeof LoginIndexRoute
  '/study-library/': typeof StudyLibraryIndexRoute
  '/assessment/examination/': typeof AssessmentExaminationIndexRoute
  '/login/forgot-password/': typeof LoginForgotPasswordIndexRoute
  '/study-library/subjects/': typeof StudyLibrarySubjectsIndexRoute
  '/assessment/examination/$assessmentId/LearnerLiveTest': typeof AssessmentExaminationAssessmentIdLearnerLiveTestRoute
  '/assessment/examination/$assessmentId/assessmentPreview': typeof AssessmentExaminationAssessmentIdAssessmentPreviewRoute
  '/assessment/examination/$assessmentId/': typeof AssessmentExaminationAssessmentIdIndexRoute
  '/study-library/subjects/$subject/': typeof StudyLibrarySubjectsSubjectIndexRoute
  '/study-library/subjects/$subject/$module/': typeof StudyLibrarySubjectsSubjectModuleIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/login'
    | '/study-library'
    | '/assessment/examination'
    | '/login/forgot-password'
    | '/study-library/subjects'
    | '/assessment/examination/$assessmentId/LearnerLiveTest'
    | '/assessment/examination/$assessmentId/assessmentPreview'
    | '/assessment/examination/$assessmentId'
    | '/study-library/subjects/$subject'
    | '/study-library/subjects/$subject/$module'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/dashboard'
    | '/login'
    | '/study-library'
    | '/assessment/examination'
    | '/login/forgot-password'
    | '/study-library/subjects'
    | '/assessment/examination/$assessmentId/LearnerLiveTest'
    | '/assessment/examination/$assessmentId/assessmentPreview'
    | '/assessment/examination/$assessmentId'
    | '/study-library/subjects/$subject'
    | '/study-library/subjects/$subject/$module'
  id:
    | '__root__'
    | '/dashboard/'
    | '/login/'
    | '/study-library/'
    | '/assessment/examination/'
    | '/login/forgot-password/'
    | '/study-library/subjects/'
    | '/assessment/examination/$assessmentId/LearnerLiveTest'
    | '/assessment/examination/$assessmentId/assessmentPreview'
    | '/assessment/examination/$assessmentId/'
    | '/study-library/subjects/$subject/'
    | '/study-library/subjects/$subject/$module/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  StudyLibraryIndexRoute: typeof StudyLibraryIndexRoute
  AssessmentExaminationIndexRoute: typeof AssessmentExaminationIndexRoute
  LoginForgotPasswordIndexRoute: typeof LoginForgotPasswordIndexRoute
  StudyLibrarySubjectsIndexRoute: typeof StudyLibrarySubjectsIndexRoute
  AssessmentExaminationAssessmentIdLearnerLiveTestRoute: typeof AssessmentExaminationAssessmentIdLearnerLiveTestRoute
  AssessmentExaminationAssessmentIdAssessmentPreviewRoute: typeof AssessmentExaminationAssessmentIdAssessmentPreviewRoute
  AssessmentExaminationAssessmentIdIndexRoute: typeof AssessmentExaminationAssessmentIdIndexRoute
  StudyLibrarySubjectsSubjectIndexRoute: typeof StudyLibrarySubjectsSubjectIndexRoute
  StudyLibrarySubjectsSubjectModuleIndexRoute: typeof StudyLibrarySubjectsSubjectModuleIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  StudyLibraryIndexRoute: StudyLibraryIndexRoute,
  AssessmentExaminationIndexRoute: AssessmentExaminationIndexRoute,
  LoginForgotPasswordIndexRoute: LoginForgotPasswordIndexRoute,
  StudyLibrarySubjectsIndexRoute: StudyLibrarySubjectsIndexRoute,
  AssessmentExaminationAssessmentIdLearnerLiveTestRoute:
    AssessmentExaminationAssessmentIdLearnerLiveTestRoute,
  AssessmentExaminationAssessmentIdAssessmentPreviewRoute:
    AssessmentExaminationAssessmentIdAssessmentPreviewRoute,
  AssessmentExaminationAssessmentIdIndexRoute:
    AssessmentExaminationAssessmentIdIndexRoute,
  StudyLibrarySubjectsSubjectIndexRoute: StudyLibrarySubjectsSubjectIndexRoute,
  StudyLibrarySubjectsSubjectModuleIndexRoute:
    StudyLibrarySubjectsSubjectModuleIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/dashboard/",
        "/login/",
        "/study-library/",
        "/assessment/examination/",
        "/login/forgot-password/",
        "/study-library/subjects/",
        "/assessment/examination/$assessmentId/LearnerLiveTest",
        "/assessment/examination/$assessmentId/assessmentPreview",
        "/assessment/examination/$assessmentId/",
        "/study-library/subjects/$subject/",
        "/study-library/subjects/$subject/$module/"
      ]
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/study-library/": {
      "filePath": "study-library/index.tsx"
    },
    "/assessment/examination/": {
      "filePath": "assessment/examination/index.tsx"
    },
    "/login/forgot-password/": {
      "filePath": "login/forgot-password/index.tsx"
    },
    "/study-library/subjects/": {
      "filePath": "study-library/subjects/index.tsx"
    },
    "/assessment/examination/$assessmentId/LearnerLiveTest": {
      "filePath": "assessment/examination/$assessmentId/LearnerLiveTest.tsx"
    },
    "/assessment/examination/$assessmentId/assessmentPreview": {
      "filePath": "assessment/examination/$assessmentId/assessmentPreview.tsx"
    },
    "/assessment/examination/$assessmentId/": {
      "filePath": "assessment/examination/$assessmentId/index.tsx"
    },
    "/study-library/subjects/$subject/": {
      "filePath": "study-library/subjects/$subject/index.tsx"
    },
    "/study-library/subjects/$subject/$module/": {
      "filePath": "study-library/subjects/$subject/$module/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
