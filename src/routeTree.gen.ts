/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as LoginForgotPasswordIndexImport } from './routes/login/forgot-password/index'

// Create/Update Routes

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const LoginForgotPasswordIndexRoute = LoginForgotPasswordIndexImport.update({
  id: '/login/forgot-password/',
  path: '/login/forgot-password/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/forgot-password/': {
      id: '/login/forgot-password/'
      path: '/login/forgot-password'
      fullPath: '/login/forgot-password'
      preLoaderRoute: typeof LoginForgotPasswordIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/login': typeof LoginIndexRoute
  '/login/forgot-password': typeof LoginForgotPasswordIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginIndexRoute
  '/login/forgot-password': typeof LoginForgotPasswordIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/login/': typeof LoginIndexRoute
  '/login/forgot-password/': typeof LoginForgotPasswordIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/login/forgot-password'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/login/forgot-password'
  id: '__root__' | '/login/' | '/login/forgot-password/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LoginIndexRoute: typeof LoginIndexRoute
  LoginForgotPasswordIndexRoute: typeof LoginForgotPasswordIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  LoginIndexRoute: LoginIndexRoute,
  LoginForgotPasswordIndexRoute: LoginForgotPasswordIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/login/",
        "/login/forgot-password/"
      ]
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/login/forgot-password/": {
      "filePath": "login/forgot-password/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
